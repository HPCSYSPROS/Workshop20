/* wp_shrink.alpha: Dec assembler version of wp_shrink.c */
/* coded for the alpha 21064 */
#include "asdef.alpha.h"
#define XUP 0
#define YUP 1
#define ZUP 2
#define TUP 3
#define TDOWN 4
#define ZDOWN 5
#define YDOWN 6
#define XDOWN 7
#define PLUS +1
#define MINUS -1
    .globl wp_shrink
    .ent wp_shrink 2

/* register names */
#define src a0	/* address of source wilson_vector */
#define dest a1	/* address of dest. half_wilson_vector */
#define dir a2	/* direction */
#define sign a3	/* sign: PLUS = +1, MINUS = -1 */
#define color t1 /* loop over colors */
#define scratch t2	/*scratch integer*/

wp_shrink:
	bis zero,zero,color	/* initialize color counter */
	/* if (sign==-1) dir <- OPPDIR(dir) = 7-dir */
	bge	sign,SKIP1
	bis	zero,7,scratch
	subq	scratch,dir,dir
SKIP1:
	/* switch(dir) */
	cmpeq	dir,XUP,scratch
	bne scratch,XUP_S
	cmpeq	dir,YUP,scratch
	bne scratch,YUP_S
	cmpeq	dir,ZUP,scratch
	bne scratch,ZUP_S
	cmpeq	dir,TUP,scratch
	bne scratch,TUP_S
	cmpeq	dir,TDOWN,scratch
	bne scratch,TDOWN_S
	cmpeq	dir,ZDOWN,scratch
	bne scratch,ZDOWN_S
	cmpeq	dir,YDOWN,scratch
	bne scratch,YDOWN_S
	cmpeq	dir,XDOWN,scratch
	bne scratch,XDOWN_S

XUP_S:
XUP_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	subs	ft0,ft7,ft9
	adds	ft1,ft6,ft10
	subs	ft2,ft5,ft11
	adds	ft3,ft4,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,XUP_L
	ret     zero,(ra)
YUP_S:
YUP_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	subs	ft0,ft6,ft9
	subs	ft1,ft7,ft10
	adds	ft2,ft4,ft11
	adds	ft3,ft5,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,YUP_L
	ret     zero,(ra)
ZUP_S:
ZUP_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	subs	ft0,ft5,ft9
	adds	ft1,ft4,ft10
	adds	ft2,ft7,ft11
	subs	ft3,ft6,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,ZUP_L
	ret     zero,(ra)
TUP_S:
TUP_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	adds	ft0,ft4,ft9
	adds	ft1,ft5,ft10
	adds	ft2,ft6,ft11
	adds	ft3,ft7,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,TUP_L
	ret     zero,(ra)
XDOWN_S:
XDOWN_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	adds	ft0,ft7,ft9
	subs	ft1,ft6,ft10
	adds	ft2,ft5,ft11
	subs	ft3,ft4,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,XDOWN_L
	ret     zero,(ra)
YDOWN_S:
YDOWN_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	adds	ft0,ft6,ft9
	adds	ft1,ft7,ft10
	subs	ft2,ft4,ft11
	subs	ft3,ft5,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,YDOWN_L
	ret     zero,(ra)
ZDOWN_S:
ZDOWN_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	adds	ft0,ft5,ft9
	subs	ft1,ft4,ft10
	subs	ft2,ft7,ft11
	adds	ft3,ft6,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,ZDOWN_L
	ret     zero,(ra)
TDOWN_S:
TDOWN_L:
	lds	ft0,0(src)	/* src->d[0].c[i].real */
	lds	ft1,4(src)	/* src->d[0].c[i].imag */
	lds	ft2,24(src)	/* src->d[1].c[i].real */
	lds	ft3,28(src)	/* src->d[1].c[i].imag */
	lds	ft4,48(src)	/* src->d[2].c[i].real */
	lds	ft5,52(src)	/* src->d[2].c[i].imag */
	lds	ft6,72(src)	/* src->d[3].c[i].real */
	lds	ft7,76(src)	/* src->d[3].c[i].imag */

	subs	ft0,ft4,ft9
	subs	ft1,ft5,ft10
	subs	ft2,ft6,ft11
	subs	ft3,ft7,ft12

	sts	ft9,0(dest)
	sts	ft10,4(dest)
	sts	ft11,24(dest)
	sts	ft12,28(dest)

	addq color,1,color
	addq src,8,src		/* next color */
	addq dest,8,dest
	cmplt color,3,scratch
	bne scratch,TDOWN_L
	ret     zero,(ra)

	.end wp_shrink
