#ifndef _3X3_ACTION_H
#define _3X3_ACTION_H


#include "../include/umethod.h"
#include "../include/dirs.h"
#include "../generic_ks/imp_actions/imp_action_types.h"
#define FERM_ACTION HISQ

    /* Specify paths in orientation in which they appear in the
       forward part of the x component of dslash().  Rotations and
       reflections will be automatically included. Be careful
       about signs of coefficients.  See long comment at bottom
       of quark_stuff.c. */


#define Clink_1		(0.4)	// single link coeff in first smearing
#define Cstaple_1	(-0.1)	// staple coeff in first smearing
#define Clink_2		(0.4)	// single link coeff in second smearing
#define Cstaple_2	(-0.1)	// staple coeff in second smearing

// Smearing for first level
#define QUARK_ACTION_DESCRIPTION_1 "\"1 link plus 3-staple iteration 1\""

#define MAX_LENGTH 9	// Maximum length of path in any path table
#define MAX_BASIC_PATHS 345  // Max. no. of basic paths in any path table
#define NUM_BASIC_PATHS_1 2
#define MAX_NUM_1 56
#ifdef IMP_QUARK_ACTION_DEFINE_PATH_TABLES
    static int path_ind_1[NUM_BASIC_PATHS_1][MAX_LENGTH] = {
    { XUP, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },	/* One Link */
    { YUP, XUP, YDOWN, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },	/* Staple */
    };
    static int quark_action_npaths_1 = NUM_BASIC_PATHS_1 ;
    static int path_length_in_1[NUM_BASIC_PATHS_1] = {1,3};
    static Real path_coeff_1[NUM_BASIC_PATHS_1] = {
       Clink_1,        /* one link */
       Cstaple_1,     /* simple staple */
    };
#endif

// Unitarization algorithm
// Choices are UNITARIZE_NONE, UNITARIZE_APE, UNITARIZE_HISQ
#define UNITARIZATION_METHOD UNITARIZE_NONE

// Smearing for second level
#define QUARK_ACTION_DESCRIPTION_2 "\"1 link plus 3-staple, iteration 2\""

#ifdef IMP_QUARK_ACTION_DEFINE_PATH_TABLES
#define NUM_BASIC_PATHS_2 2
#define MAX_NUM_2 56
    static int path_ind_2[NUM_BASIC_PATHS_2][MAX_LENGTH] = {
    { XUP, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },	/* One Link */
    { YUP, XUP, YDOWN, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },	/* Staple */
    };
    static int path_length_in_2[NUM_BASIC_PATHS_2] = {1,3};
    static int quark_action_npaths_2 = NUM_BASIC_PATHS_2 ;
    static Real path_coeff_2[NUM_BASIC_PATHS_1] = {
       Clink_2,        /* one link */
       Cstaple_2,     /* simple staple */
    };
#endif

//FOR THE MOMENT, we keep the old stuff around.  It will be superceded by
//two new sets of variables

#define QUARK_ACTION_DESCRIPTION "\"3-staple smearing iterated twice\""

#ifdef IMP_QUARK_ACTION_DEFINE_PATH_TABLES
#define NUM_BASIC_PATHS 342
#define MAX_NUM 16520
    static int path_ind[NUM_BASIC_PATHS][MAX_LENGTH] = {
{ XUP, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },  
{ YUP, XUP, YDOWN, NODIR, NODIR, NODIR, NODIR, NODIR, NODIR },  
//{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },   // combine with staple
//{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },   // combine with link
{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },   // shorten
    //{ YUP, XUP, XUP, YDOWN, XDOWN, NODIR, NODIR, NODIR, NODIR },  
{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
//{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },   // combine with link
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ YUP, YUP, YDOWN, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ XUP, YUP, XDOWN, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ XDOWN, YUP, XUP, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ ZUP, YUP, ZDOWN, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ ZDOWN, YUP, ZUP, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ TUP, YUP, TDOWN, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, XUP, XUP, XDOWN, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, YUP, XUP, YDOWN, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, YDOWN, XUP, YUP, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, ZUP, XUP, ZDOWN, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, ZDOWN, XUP, ZUP, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, TUP, XUP, TDOWN, TUP, YDOWN, TDOWN },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, YDOWN, YDOWN, YUP },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, XDOWN, YDOWN, XUP },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, XUP, YDOWN, XDOWN },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, ZDOWN, YDOWN, ZUP },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, ZUP, YDOWN, ZDOWN },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, TDOWN, YDOWN, TUP },  
{ TDOWN, YUP, TUP, TDOWN, XUP, TUP, TUP, YDOWN, TDOWN },  
    };
    static int path_length_in[NUM_BASIC_PATHS] = {
1,3,
// Need 7^3 = 343 "9"s

//9,9,9,9,9,9,9,
9,    9,9,9,9,

//9,9,9,9,9,9,9,
9,9,9,9,9,9, 

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,

9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
9,9,9,9,9,9,9,
};
    static int quark_action_npaths = NUM_BASIC_PATHS ;
    static Real path_coeff[NUM_BASIC_PATHS] = {
//(Clink_2*Clink_1),
    (Clink_2*Clink_1+12*Cstaple_2*Clink_1*Clink_1*Cstaple_1),
//(Clink_2*Cstaple_1),
    (Clink_2*Cstaple_1+1*Cstaple_2*Clink_1*Clink_1*Clink_1),

//(Cstaple_2*Clink_1*Clink_1*Clink_1), // combine with staple
//(Cstaple_2*Clink_1*Clink_1*Cstaple_1), // combine with link
(Cstaple_2*Clink_1*Clink_1*Cstaple_1),
(Cstaple_2*Clink_1*Clink_1*Cstaple_1),
(Cstaple_2*Clink_1*Clink_1*Cstaple_1),
(Cstaple_2*Clink_1*Clink_1*Cstaple_1),
(Cstaple_2*Clink_1*Clink_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
//(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1), // combine with link
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Clink_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Clink_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Clink_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Clink_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Clink_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
(Cstaple_2*Cstaple_1*Cstaple_1*Cstaple_1),
    };
#endif

#endif // _3X3_ACTION_H
