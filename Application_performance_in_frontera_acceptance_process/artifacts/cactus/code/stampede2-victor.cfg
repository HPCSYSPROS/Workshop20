VERSION = stampede2-2017-06-19

CPP = cpp
FPP = cpp
CC  = /opt/intel/compilers_and_libraries_2018.0.128/linux/bin/intel64/icc
CXX = /opt/intel/compilers_and_libraries_2018.0.128/linux/bin/intel64/icpc
F77 = /opt/intel/compilers_and_libraries_2018.0.128/linux/bin/intel64/ifort
F90 = /opt/intel/compilers_and_libraries_2018.0.128/linux/bin/intel64/ifort

##CPPFLAGS = -g # -DMPICH_IGNORE_CXX_SEEK
# following option compiles only given hydro method in THC (segfault for others)
CPPFLAGS = -g -DSYMMETRIC_OPERATORS -DHRSCC_FD_ENABLE_ONLY=14 -DHRSCC_FV_ENABLE_ONLY=68 # -DMPICH_IGNORE_CXX_SEEK                             
FPPFLAGS = -g -DSYMMETRIC_OPERATORS -traditional
## VLE note
## VLE christian was using MIC-AVX
## VLE also crudely adding hdf5
CFLAGS   = -g -traceback -debug all -align -std=gnu99 -xCORE-AVX2 -axMIC-AVX512,CORE-AVX512 -I/opt/apps/intel17/hdf5/1.8.16/x86_64/include -L/opt/apps/intel17/hdf5/1.8.16/x86_64/lib
CXXFLAGS = -g -traceback -debug all -align -std=gnu++11 -xCORE-AVX2 -axMIC-AVX512,CORE-AVX512 -I/opt/apps/intel17/hdf5/1.8.16/x86_64/include -L/opt/apps/intel17/hdf5/1.8.16/x86_64/lib
F77FLAGS = -g -traceback -debug all -align -pad -safe-cray-ptr -xCORE-AVX2 -axMIC-AVX512,CORE-AVX512 -I/opt/apps/intel17/hdf5/1.8.16/x86_64/include -L/opt/apps/intel17/hdf5/1.8.16/x86_64/lib
F90FLAGS = -g -traceback -debug all -align -pad -safe-cray-ptr -xCORE-AVX2 -axMIC-AVX512,CORE-AVX512 -I/opt/apps/intel17/hdf5/1.8.16/x86_64/include -L/opt/apps/intel17/hdf5/1.8.16/x86_64/lib

LDFLAGS = 

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

DEBUG = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0 -fp-model precise
CXX_DEBUG_FLAGS = -O0 -fp-model precise
F77_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format
F90_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format

OPTIMISE = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG                                                                       
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG                                                                       
C_OPTIMISE_FLAGS   = -O3
CXX_OPTIMISE_FLAGS = -O3
F77_OPTIMISE_FLAGS = -O3 -fp-model precise
F90_OPTIMISE_FLAGS = -O3 -fp-model precise

CPP_NO_OPTIMISE_FLAGS  =
FPP_NO_OPTIMISE_FLAGS  =
C_NO_OPTIMISE_FLAGS    = -O0
CXX_NO_OPTIMISE_FLAGS  = -O0
CUCC_NO_OPTIMISE_FLAGS =
F77_NO_OPTIMISE_FLAGS  = -O0
F90_NO_OPTIMISE_FLAGS  = -O0

PROFILE = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -fopenmp
C_OPENMP_FLAGS   = -fopenmp
CXX_OPENMP_FLAGS = -fopenmp
F77_OPENMP_FLAGS = -fopenmp
F90_OPENMP_FLAGS = -fopenmp

WARN           = yes
CPP_WARN_FLAGS =
FPP_WARN_FLAGS =
C_WARN_FLAGS   =
CXX_WARN_FLAGS =
F77_WARN_FLAGS =
F90_WARN_FLAGS =



BLAS_DIR  = NO_BUILD
BLAS_LIBS = -mkl

GSL_DIR = BUILD

HDF5_DIR = /opt/apps/intel17/hdf5/1.8.16/x86_64
## VLE adding this one.
HDF5_LIBS = hdf5

HWLOC_DIR = BUILD

LAPACK_DIR  = NO_BUILD
LAPACK_LIBS = -mkl

MPI_DIR  = /opt/intel/compilers_and_libraries_2018.0.128/linux/mpi
## VLE adding iomp5 mpx for "fast_memset"
MPI_LIBS = mpicxx mpifort mpi mpigi dl rt pthread numa iomp5
MPI_INC_DIRS = /opt/intel/compilers_and_libraries_2018.0.128/linux/mpi/intel64/include

OPENBLAS_DIR  = NO_BUILD
OPENBLAS_LIBS = -mkl

PTHREADS_DIR = NO_BUILD
PTHREADS_LIBS = pthread 
