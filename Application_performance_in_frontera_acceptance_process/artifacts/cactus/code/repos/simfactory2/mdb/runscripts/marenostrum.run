#! /bin/bash

echo "Preparing:"
set -x                          # Output commands
set -e                          # Abort on errors

cd @RUNDIR@-active
echo "Checking:"
pwd
hostname
date

echo "Environment:"
export CACTUS_NUM_PROCS=@NUM_PROCS@
export CACTUS_NUM_THREADS=@NUM_THREADS@
export GMON_OUT_PREFIX=gmon.out
export OMP_NUM_THREADS=@NUM_THREADS@
export OPENMPI_DIR=/apps/OPENMPI/1.8.1-mellanox
env | sort > SIMFACTORY/ENVIRONMENT

for node in $(echo $LSB_HOSTS | xargs -n 1 echo | uniq); do
    for ((proc=0; $proc<@(@PPN_USED@ / @NUM_THREADS@)@; proc=$proc+1)); do
        echo ${node}
    done
done > SIMFACTORY/NODES

echo "Job setup:"
echo "   Allocated:"
echo "      Nodes:                      @NODES@"
echo "      Cores per node:             @PPN@"
echo "   Running:"
echo "      MPI processes:              @NUM_PROCS@"
echo "      OpenMP threads per process: @NUM_THREADS@"
echo "      MPI processes per node:     @(1.0*@NUM_PROCS@/@NODES@)@"
echo "      OpenMP threads per core:    @(1.0*(@NUM_PROCS@*@NUM_THREADS@)/(@NODES@*@PPN@))@"
echo "      OpenMP threads per node:    @PPN_USED@"

case '@PPN_USED@:@NUM_THREADS@' in
    (16:16|8:8|4:4|2:2|1:1) options='-npernode 1 -bind-to none';;
    (16:8|8:4|4:2|2:1)      options='--map-by ppr:1:socket -bind-to socket';;
    (16:4|8:2|4:1)          options='--map-by ppr:2:socket -bind-to socket';;
    (16:2|8:1)              options='--map-by ppr:4:socket -bind-to socket';;
    (16:1|*)                options='--map-by ppr:8:socket -bind-to core';;
esac

echo "Starting:"
export CACTUS_STARTTIME=$(date +%s)
time $OPENMPI_DIR/bin/mpirun -np @NUM_PROCS@ -machinefile SIMFACTORY/NODES $options -display-map -report-bindings -x OMP_NUM_THREADS=@NUM_THREADS@ @EXECUTABLE@ -L 3 @PARFILE@

echo "Stopping:"
date

echo "Done."
