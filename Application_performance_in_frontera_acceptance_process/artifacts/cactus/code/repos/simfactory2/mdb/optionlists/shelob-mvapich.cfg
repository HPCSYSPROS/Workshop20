# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = shelob-mvapich-2016-02-14

CPP = cpp
FPP = cpp
CC  = /usr/local/compilers/Intel/composer_xe_2013.5.192/bin/intel64/icc
CXX = /usr/local/compilers/Intel/composer_xe_2013.5.192/bin/intel64/icpc
F77 = /usr/local/compilers/Intel/composer_xe_2013.5.192/bin/intel64/ifort
F90 = /usr/local/compilers/Intel/composer_xe_2013.5.192/bin/intel64/ifort

CPPFLAGS = -DMPICH_IGNORE_CXX_SEEK
FPPFLAGS = -traditional
CFLAGS   = -g -xHOST -align -std=gnu99 -U__STRICT_ANSI__ -ansi_alias
CXXFLAGS = -g -xHOST -align -std=gnu++11 -U__STRICT_ANSI__ -ansi_alias
F77FLAGS = -g -xHOST -align -pad -safe_cray_ptr
F90FLAGS = -g -xHOST -align -pad -safe_cray_ptr

LIBDIRS = /usr/local/packages/cuda/5.0/lib64 /usr/lib64 /usr/local/compilers/Intel/composer_xe_2013.5.192/compiler/lib/intel64
LIBS    = cudart   ifcore imf svml

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

# -check-uninit fails for asm output operands
DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = # -check-uninit
CXX_DEBUG_FLAGS = # -check-uninit
F77_DEBUG_FLAGS = -check bounds -check format # -check all
F90_DEBUG_FLAGS = -check bounds -check format # -check all

OPTIMISE           = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE
C_OPTIMISE_FLAGS   = -Ofast
CXX_OPTIMISE_FLAGS = -Ofast
F77_OPTIMISE_FLAGS = -Ofast
F90_OPTIMISE_FLAGS = -Ofast

C_NO_OPTIMISE_FLAGS   = -O0
CXX_NO_OPTIMISE_FLAGS = -O0
F77_NO_OPTIMISE_FLAGS = -O0
F90_NO_OPTIMISE_FLAGS = -O0

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -fopenmp
C_OPENMP_FLAGS   = -fopenmp
CXX_OPENMP_FLAGS = -fopenmp
F77_OPENMP_FLAGS = -fopenmp
F90_OPENMP_FLAGS = -fopenmp

WARN           = yes
CPP_WARN_FLAGS =
FPP_WARN_FLAGS = -Wall
C_WARN_FLAGS   =
CXX_WARN_FLAGS =
F77_WARN_FLAGS =
F90_WARN_FLAGS =



BLAS_DIR  = NO_BUILD
BLAS_LIBS = -mkl

# CUDA, configured with the flesh
CUCC                = /usr/local/packages/cuda/5.0/bin/nvcc
CUCCFLAGS           = -m 64 -arch sm_35 -Xcompiler -march=native -g -maxrregcount 60 -Drestrict=__restrict__
CUCC_OPTIMISE_FLAGS = -O3 -use_fast_math
CUCC_WARN_FLAGS     = -Xcompiler -Wall

# CUDA, configured via thorn CUDA
CUDA_DIR                  = /usr/local/packages/cuda/5.0
CUCC_ARCH                 = sm_35
CUCC_EXTRA_FLAGS          = -maxrregcount 63 -Drestrict=__restrict__
CUCC_EXTRA_OPTIMISE_FLAGS = -use_fast_math
CUCC_EXTRA_WARN_FLAGS     = -use_fast_math

FFTW3_DIR = /usr/local/packages/fftw/3.3.4/Intel-13.0.0-mvapich2-1.9
# FFTW3_DIR = BUILD

GSL_DIR = /usr/local/packages/gsl/1.15/Intel-13.0.0

HDF5_DIR = /usr/local/packages/hdf5/1.8.9/Intel-13.0.0
#HDF5_DIR = BUILD

HWLOC_EXTRA_LIBS = numa

LAPACK_DIR  = NO_BUILD
LAPACK_LIBS = -mkl

MPI_DIR      = /usr/local/packages/mvapich2/1.9/Intel-13.0.0
# MPI_INC_DIRS = /usr/local/packages/mpich/3.0.2/Intel-13.0.0/include
# MPI_LIB_DIRS = /usr/local/packages/mpich/3.0.2/Intel-13.0.0/lib
# MPI_LIBS     = mpichf90 mpichcxx mpich

OPENBLAS_DIR  = NO_BUILD
OPENBLAS_LIBS = -mkl

OPENCL_DIR = /usr/local/packages/cuda/5.0

PAPI_DIR  = /home/diener/papi-5.1.0.2-intel
PAPI_LIBS = papi

PETSC_DIR                   = BUILD
PETSC_BLAS_EXTRA_LIB_DIRS   = /usr/local/compilers/Intel/composer_xe_2013.5.192/mkl/lib/intel64
PETSC_BLAS_EXTRA_LIBS       = mkl_intel_lp64 mkl_intel_thread mkl_core iomp5
PETSC_LAPACK_EXTRA_LIB_DIRS = /usr/local/compilers/Intel/composer_xe_2013.5.192/mkl/lib/intel64
PETSC_LAPACK_EXTRA_LIBS     = mkl_intel_lp64 mkl_intel_thread mkl_core iomp5

PTHREADS_DIR = NO_BUILD
