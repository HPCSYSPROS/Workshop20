#include "cctk.h"
#include "cctk_Parameters.h"
#include "cctk_Arguments.h"
#include "defs.hh"
#include "vect.hh"

#define CGS_RHO_TO_CACTUS 1.61930347e-18

typedef void (*ZelmaniQuadWaveIntegrandPointer_t)(CCTK_REAL rho,
				 CCTK_REAL sdetg,
				 CCTK_REAL alp,
				 CCTK_REAL betax,
				 CCTK_REAL betay,
				 CCTK_REAL betaz,
				 CCTK_REAL w_lo,
				 CCTK_REAL press,
				 CCTK_REAL eps,
				 CCTK_REAL velx,
				 CCTK_REAL vely,
				 CCTK_REAL velz,
				 CCTK_REAL x,
				 CCTK_REAL y,
				 CCTK_REAL z, 
				 CCTK_REAL *dIdotxx,
				 CCTK_REAL *dIdotxy,
				 CCTK_REAL *dIdotxz,
				 CCTK_REAL *dIdotyy,
				 CCTK_REAL *dIdotyz,
				 CCTK_REAL *dIdotzz);    

extern ZelmaniQuadWaveIntegrandPointer_t ZelmaniQuadWaveIntegrandPointer;

void ZelmaniQuadWaveLegacy(CCTK_REAL rho,
			  CCTK_REAL sdetg,
			  CCTK_REAL alp,
			  CCTK_REAL betax,
			  CCTK_REAL betay,
			  CCTK_REAL betaz,
			  CCTK_REAL w_lo,
			  CCTK_REAL press,
			  CCTK_REAL eps,
			  CCTK_REAL velx,
			  CCTK_REAL vely,
			  CCTK_REAL velz,
			  CCTK_REAL x,
			  CCTK_REAL y,
			  CCTK_REAL z,
			  CCTK_REAL *dIdotxx,
			  CCTK_REAL *dIdotxy,
			  CCTK_REAL *dIdotxz,
			  CCTK_REAL *dIdotyy,
			  CCTK_REAL *dIdotyz,
			  CCTK_REAL *dIdotzz);

void ZelmaniQuadWaveShibata(CCTK_REAL rho,
			  CCTK_REAL sdetg,
			  CCTK_REAL alp,
			  CCTK_REAL betax,
			  CCTK_REAL betay,
			  CCTK_REAL betaz,
			  CCTK_REAL w_lo,
			  CCTK_REAL press,
			  CCTK_REAL eps,
			  CCTK_REAL velx,
			  CCTK_REAL vely,
			  CCTK_REAL velz,
			  CCTK_REAL x,
			  CCTK_REAL y,
			  CCTK_REAL z,
			  CCTK_REAL *dIdotxx,
			  CCTK_REAL *dIdotxy,
			  CCTK_REAL *dIdotxz,
			  CCTK_REAL *dIdotyy,
			  CCTK_REAL *dIdotyz,
			  CCTK_REAL *dIdotzz);


void ZelmaniQuadWaveLegacyRadiusCriterion(CCTK_REAL rho,
					 CCTK_REAL sdetg,
					 CCTK_REAL alp,
					 CCTK_REAL betax,
					 CCTK_REAL betay,
					 CCTK_REAL betaz,
					 CCTK_REAL w_lo,
					 CCTK_REAL press,
					 CCTK_REAL eps,
					 CCTK_REAL velx,
					 CCTK_REAL vely,
					 CCTK_REAL velz,
					 CCTK_REAL x,
					 CCTK_REAL y,
					 CCTK_REAL z,
					 CCTK_REAL *dIdotxx,
					 CCTK_REAL *dIdotxy,
					 CCTK_REAL *dIdotxz,
					 CCTK_REAL *dIdotyy,
					 CCTK_REAL *dIdotyz,
					 CCTK_REAL *dIdotzz);

void ZelmaniQuadWaveEdensRadiusCriterion(CCTK_REAL rho,
					 CCTK_REAL sdetg,
					 CCTK_REAL alp,
					 CCTK_REAL betax,
					 CCTK_REAL betay,
					 CCTK_REAL betaz,
					 CCTK_REAL w_lo,
					 CCTK_REAL press,
					 CCTK_REAL eps,
					 CCTK_REAL velx,
					 CCTK_REAL vely,
					 CCTK_REAL velz,
					 CCTK_REAL x,
					 CCTK_REAL y,
					 CCTK_REAL z,
					 CCTK_REAL *dIdotxx,
					 CCTK_REAL *dIdotxy,
					 CCTK_REAL *dIdotxz,
					 CCTK_REAL *dIdotyy,
					 CCTK_REAL *dIdotyz,
					 CCTK_REAL *dIdotzz);


void ZelmaniQuadWaveLegacyDensityCriterion(CCTK_REAL rho,
					  CCTK_REAL sdetg,
					  CCTK_REAL alp,
					  CCTK_REAL betax,
					  CCTK_REAL betay,
					  CCTK_REAL betaz,
					  CCTK_REAL w_lo,
					  CCTK_REAL press,
					  CCTK_REAL eps,
					  CCTK_REAL velx,
					  CCTK_REAL vely,
					  CCTK_REAL velz,
					  CCTK_REAL x,
					  CCTK_REAL y,
					  CCTK_REAL z,
					  CCTK_REAL *dIdotxx,
					  CCTK_REAL *dIdotxy,
					  CCTK_REAL *dIdotxz,
					  CCTK_REAL *dIdotyy,
					  CCTK_REAL *dIdotyz,
					  CCTK_REAL *dIdotzz);
