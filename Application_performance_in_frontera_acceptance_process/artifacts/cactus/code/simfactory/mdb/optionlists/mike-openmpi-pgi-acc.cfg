# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = mike-openmpi-pgi-acc-2013-08-16

CPP = cpp
FPP = cpp
CC  = /usr/local/compilers/pgi/linux86-64/13.7/bin/pgcc
CXX = /usr/local/compilers/pgi/linux86-64/13.7/bin/pgCC
F77 = /usr/local/compilers/pgi/linux86-64/13.7/bin/pgf90
F90 = /usr/local/compilers/pgi/linux86-64/13.7/bin/pgf90

CPPFLAGS = -DCRAY_XT -DMPICH_IGNORE_CXX_SEEK -DCARPET_OPTIMISE -DNDEBUG
FPPFLAGS = -traditional -DCARPET_OPTIMISE -DNDEBUG -D_OPENACC

CFLAGS   = -g -DCRAY_XT -c99
CXXFLAGS = -g -DCRAY_XT --exceptions -D_ISOC99_SOURCE -D_BSD_SOURCE
F77FLAGS = -g
# -Mx,125,0x200
F90FLAGS = -g
# -Mx,125,0x200

LDFLAGS  = -Wl,--allow-multiple-definition -acc -ta=nvidia,time #-Bstatic
LIBS    = crypt  pgf90 pgf90rtl pgftnrtl pgf90_rpm1 pghpf2  rt  m  dl

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

# -check-uninit fails for asm output operands
DEBUG = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0
CXX_DEBUG_FLAGS = -O0
F77_DEBUG_FLAGS = -O0
F90_DEBUG_FLAGS = -O0

OPTIMISE = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -fast -O3 -Mvect=simd:256,assoc,fuse,prefetch,tile -acc -ta=nvidia,time -Mautoinline=totalsize:500000 -Minfo=all -tp=sandybridge-64 -Mbuiltin
# For some reason -mp and -acc at the same time sometimes causes problems for pgCC
#CXX_OPTIMISE_FLAGS = -fast -O3 -Mvect=simd:256,assoc,fuse,prefetch,tile -acc -ta=nvidia,time -Mautoinline=totalsize:500000 -Minfo=all -tp=sandybridge-64 -Mbuiltin
CXX_OPTIMISE_FLAGS = -fast -O3 -Mvect=simd:256,assoc,fuse,prefetch,tile -Mautoinline=totalsize:500000 -Minfo=all -tp=sandybridge-64 -Mbuiltin
F77_OPTIMISE_FLAGS = -fast -O3 -Mpreprocess -Mvect=simd:256,assoc,fuse,prefetch,tile -acc -ta=nvidia,time -Mautoinline=totalsize:500000 -Minfo=all -tp=sandybridge-64 -Mbuiltin
F90_OPTIMISE_FLAGS = -fast -O3 -Mpreprocess -Mvect=simd:256,assoc,fuse,prefetch,tile -acc -ta=nvidia,time -Mautoinline=totalsize:500000 -Minfo=all -tp=sandybridge-64 -Mbuiltin


C_NO_OPTIMISE_FLAGS    = -O0
CXX_NO_OPTIMISE_FLAGS  = -O0
CUCC_NO_OPTIMISE_FLAGS =
F77_NO_OPTIMISE_FLAGS  = -O0
F90_NO_OPTIMISE_FLAGS  = -O0

PROFILE = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -mp=nonuma
FPP_OPENMP_FLAGS = -D_OPENMP
C_OPENMP_FLAGS   = -mp=nonuma
CXX_OPENMP_FLAGS = -mp=nonuma
F77_OPENMP_FLAGS = -mp=nonuma
F90_OPENMP_FLAGS = -mp=nonuma

WARN           = yes
CPP_WARN_FLAGS = 
FPP_WARN_FLAGS = 
C_WARN_FLAGS   = 
CXX_WARN_FLAGS = 
F77_WARN_FLAGS = 
F90_WARN_FLAGS = 



# With OpenMP, certain Intel libraries need to be linked statically.
# This prevents the error
# "cannot allocate memory for thread-local data: ABORT".
# However, the MPI libraries must be linked dynamically.

BLAS_DIR  = /usr/local/compilers/Intel/mkl/lib/intel64
#BLAS_LIBS = -Bstatic mkl_intel_lp64 mkl_core mkl_intel_thread -Bdynamic
BLAS_LIBS = mkl_intel_lp64 mkl_core mkl_intel_thread -Bdynamic

FFTW3_DIR = /usr/local/packages/fftw/3.3.2/Intel-13.0.0

GSL_DIR = /usr/local/packages/gsl/1.15/Intel-12.1.4

HDF5_DIR = BUILD
#HDF5_DIR = /usr/local/packages/hdf5/1.8.9/Intel-13.0.0-mvapich2-1.9a
#LIBXML2_DIR = /home/knarf/utils

LAPACK_DIR  = /usr/local/compilers/Intel/mkl/lib/intel64
#LAPACK_LIBS = -Bstatic mkl_intel_lp64 mkl_core mkl_intel_thread -Bdynamic
LAPACK_LIBS = mkl_intel_lp64 mkl_core mkl_intel_thread -Bdynamic

MPI_DIR      = /usr/local/packages/openmpi/1.6.3/Intel-13.0.0
MPI_INC_DIRS = /usr/local/packages/openmpi/1.6.3/Intel-13.0.0/include
MPI_LIB_DIRS = /usr/local/packages/openmpi/1.6.3/Intel-13.0.0/lib /usr/lib64
MPI_LIBS     = mpi open-rte open-pal rdmacm ibverbs ibumad util

#MPI          = CUSTOM
#MPI_INC_DIRS = /usr/local/packages/mvapich2/1.9a/Intel-13.0.0/include
#MPI_LIB_DIRS = /usr/local/packages/mvapich2/1.9a/Intel-13.0.0/lib /usr/lib64
#MPI_LIBS     = mpich mpl ibverbs ibumad rdmacm   bfd iberty rt

PAPI_DIR = /home/diener/papi-5.1.0.2-intel
PAPI_LIBS = papi

#PETSC_DIR       = /usr/local/packages/petsc-2.3.3-intel9.1-mvapich2
#PETSC_ARCH      = linux-64
#PETSC_ARCH_LIBS = X11

PTHREADS_DIR = NO_BUILD

#TAU_MAKEFILE = /usr/local/packages/tau-2.17.1/x86_64/lib/Makefile.tau-intel10.1_mvapich2_1.2rc1-icpc-mpi-pdt
