# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = cfermi-2012-10-18

# last-tested-on: 2012-12-18
# last-tested-by: Erik Schnetter <schnetter@gmail.com>

CPP = cpp
FPP = cpp
CC  = /usr/local/apps/intel/composerxe-2011.2.137/bin/icc
CXX = /usr/local/apps/intel/composerxe-2011.2.137/bin/icpc
F77 = /usr/local/apps/intel/composerxe-2011.2.137/bin/ifort
F90 = /usr/local/apps/intel/composerxe-2011.2.137/bin/ifort

# The options -g -traceback -debug all lead to and ICE in
# ZelmaniLeak's calc_taus.F90 when optimising at -O2 or higher. We
# therefore use them for debugging only for Fortran.
CPPFLAGS =
FPPFLAGS = -traditional
CFLAGS   = -g -traceback -debug all -xSSE4.2 -align -std=c99 -ansi_alias -U__STRICT_ANSI__
CXXFLAGS = -g -traceback -debug all -xSSE4.2 -align -std=c99 -restrict -D__builtin_fpclassify=::fpclassify -D__builtin_signbit=::signbit -D_intel_fast_memcpy=memcpy -D_intel_fast_memset=memset
F77FLAGS = -xSSE4.2 -align -pad
F90FLAGS = -xSSE4.2 -align -pad

CUCC                = /usr/local/apps/intel/composerxe-2011.2.137/bin/icpc
CUCCFLAGS           = -x c++ -DMPICH_IGNORE_CXX_SEEK -g -traceback -debug all -xSSE4.2 -align -std=c99 -restrict -openmp
CUCC_DEBUG_FLAGS    = -DCARPET_DEBUG -O0
CUCC_OPTIMISE_FLAGS = -O3 -override-limits
CUCC_WARN_FLAGS     =

CU_DEPEND = /usr/local/apps/intel/composerxe-2011.2.137/bin/icpc -M -x c++ -DMPICH_IGNORE_CXX_SEEK -openmp

LDFLAGS = -rdynamic -L/usr/local/apps/intel/composerxe-2011.2.137/lib/intel64 -Wl,-rpath,/usr/local/apps/intel/composerxe-2011.2.137/lib/intel64   -lifcore -liomp5 -lpthread

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

# -check-uninit fails for asm output operands
DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0 # -check-uninit
CXX_DEBUG_FLAGS = -O0 -g -traceback -debug all # -check-uninitF77_DEBUG_FLAGS = -O0 -check bounds -check format # -check all
F90_DEBUG_FLAGS = -O0 -g -traceback -debug all -check bounds -check format # -check all

OPTIMISE           = yes
CPP_OPTIMISE_FLAGS = #-DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = #-DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -O3 -override-limits
CXX_OPTIMISE_FLAGS = -O3 -override-limits
F77_OPTIMISE_FLAGS = -O3 -override-limits
F90_OPTIMISE_FLAGS = -O3 -override-limits

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -openmp
FPP_OPENMP_FLAGS = -fopenmp
C_OPENMP_FLAGS   = -openmp
CXX_OPENMP_FLAGS = -openmp
F77_OPENMP_FLAGS = -openmp
F90_OPENMP_FLAGS = -openmp

WARN           = yes
CPP_WARN_FLAGS = 
FPP_WARN_FLAGS = 
C_WARN_FLAGS   = 
CXX_WARN_FLAGS = 
F77_WARN_FLAGS = 
F90_WARN_FLAGS = 



# With OpenMP, certain Intel libraries need to be linked statically.
# This prevents the error
# "cannot allocate memory for thread-local data: ABORT".
# However, the MPI libraries must be linked dynamically.

BLAS_DIR  = /usr/local/apps/intel/composerxe-2011.2.137/mkl/lib/intel64
BLAS_LIBS = mkl_intel_lp64 mkl_blas95_lp64 mkl_core mkl_sequential pthread ifport

LAPACK_DIR  = /usr/local/apps/intel/composerxe-2011.2.137/mkl/lib/intel64
LAPACK_LIBS = mkl_lapack95_lp64 mkl_core  ifport

MPI_DIR = /home/eschnett/openmpi-1.4.3

PETSC_DIR                = BUILD
PETSC_MPI_EXTRA_LIB_DIRS = /usr/lib64
PETSC_MPI_EXTRA_LIBS     = pthread

PTHREADS_DIR = NO_BUILD
