[galileo]

# last-tested-on: 2015-06-05
# last-tested-by: Roberto De Pietri <roberto.depietri@unipr.it>

# Machine description
nickname        = galileo
name            = GALILEO
location        = CINECA, Casalecchio di Reno (BO), Italy
status          = production
description     = The Italian Tier-1 cluster  for industrial and public research

# Access to this machine
hostname        = login.galileo.cineca.it
rsynccmd        = rsync
sshcmd          = ssh
aliaspattern    = ^(node[0-9][0-9][0-9])(\.galileo\.cineca\.it)?$
# (gpc0[1234]|gpc-f[0-9]+n[0-9]+)(

# Source tree management
sourcebasedir   = /galileo/home/userexternal/@USER@
disabled-thorns = <<EOT
    ExternalLibraries/PAPI
EOT
#    CaCUDA/CaCUDALib
#    CaCUDA/WaveToyCUDA
#    CactusPUGHIO/IOHDF5
#    CactusPUGHIO/IOHDF5Util

optionlist      = galileo.cfg
submitscript    = galileo.sub
runscript       = galileo.run
make            = "make -j4 "

#-----------------------------------------------------------
# 
# Model: IBM NeXtScale
# Architecture: Linux Infiniband Cluster
# 
# Nodes: 516 
# Processors: 2 8-cores Intel Haswell 2.40 GHz per node
# Cores: 16 cores/node, 8256 cores in total
# GPU: 2 Intel Phi 7120p per node on 384 nodes  (768 in total)
# RAM: 128 GB/node, 8 GB/core
# Internal Network: Infiniband with 4x QDR switches
# Disk Space: 2.000 TB of local scratch
# Peak Performance: 1.000 TFlop/s (to be defined)
#
# --------------------------------------------------------

# Simulation management
basedir         = /galileo/home/userexternal/@USER@/simulations
# quota
cpu             = E5-2630
#Intel(R) Xeon(R) Hashwell 8-core E5-2630 v3 processors
cpufreq         = 2.4
ppn             = 16
spn             = 1
max-num-threads = 16
num-threads     = 1
memory          = 131072
nodes           = 516
min-ppn         = 16
allocation      = INFNG_test
queue           = root
maxwalltime     = 24:00:00
submit          = qsub  @SUBMITSCRIPT@
getstatus       = qstat @JOB_ID@ 
stop            = qdel @JOB_ID@
submitpattern   = (\d+)[.]node[0-9][0-9][0-9]
statuspattern   = ^@JOB_ID@[. ]
queuedpattern   = " Q "
runningpattern  = " R "
holdingpattern  = " H "
exechost        = qstat -f @JOB_ID@
exechostpattern = exec_host = (\w+)/
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err

