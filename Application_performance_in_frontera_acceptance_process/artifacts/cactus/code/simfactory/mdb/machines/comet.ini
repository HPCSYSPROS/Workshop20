[comet]

# last-tested-on: 2016-06-04
# last-tested-by: Erik Schnetter <schnetter@gmail.com>

# Machine description
nickname        = comet
name            = Comet
location        = SDSC
description     = XSEDE Linux cluster at SDSC
webpage         = https://portal.xsede.org/sdsc-comet
status          = experimental

# Access to this machine
hostname        = comet.sdsc.xsede.org
rsynccmd        = /home/ux452368/rsync-3.0.9/bin/rsync
envsetup        = <<EOT
    source /etc/profile
    module list -l 2>&1
    module unload mvapich2_ib
    module unload intel
    module unload gnutools
    module list -l 2>&1
    module load gnutools/2.69
    module load intel/2015.2.164
    module load mvapich2_ib/2.1
    module load fftw
    module load gsl
    module load hdf5
    module load papi
    module load petsc
    module list -l 2>&1
EOT
aliaspattern    = ^comet-ln\d\.sdsc\.edu$

# Source tree management
sourcebasedir   = /home/@USER@/comet
optionlist      = comet.cfg
submitscript    = comet.sub
runscript       = comet.run
make            = make -j16
disabled-thorns = <<EOT
    ExternalLibraries/BLAS
    ExternalLibraries/LAPACK
EOT
enabled-thorns = <<EOT
    ExternalLibraries/OpenBLAS
    # ExternalLibraries/PETSc
    #     CactusElliptic/EllPETSc
    #     TAT/TATPETSc
    ExternalLibraries/pciutils
EOT

# Simulation management
basedir         = /oasis/scratch/comet/@USER@/temp_project/simulations
cpu             = 2 x 12-core Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz
cpufreq         = 2.50
flop/cycle      = 16
ppn             = 24
spn             = 2
mpn             = 2
max-num-threads = 24
num-threads     = 24
memory          = 131072
nodes           = 1728
min-ppn         = 24
allocation      = NO_ALLOCATION
queue           = compute
maxwalltime     = 48:00:00
submit          = sbatch @SCRIPTFILE@; sleep 5
getstatus       = squeue -j @JOB_ID@
stop            = scancel @JOB_ID@
submitpattern   = Submitted batch job ([0-9]+)
statuspattern   = '@JOB_ID@ '
queuedpattern   = ' PD '
runningpattern  = ' (CF|CG|R|TO) '
holdingpattern  = ' S '
#exechost        = head -n 1 SIMFACTORY/NODES
#exechostpattern = ^(\S+)
#stdout          = cat @SIMULATION_NAME@.out
#stderr          = cat @SIMULATION_NAME@.err
#stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
