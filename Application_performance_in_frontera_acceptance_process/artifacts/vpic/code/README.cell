################################################################################
# IBM Cell README
################################################################################

To configure and build for a Cell version do:

% ./configure --enable-cell
% make

My current approach for adding support for the IBM Cell to the VPIC library is
very C-oriented.  This seems like the simplest solution which requires the
least amount of modification.  The primary changes have been done in the
following areas:

1) added example deck functions under "top-level/sample/bergen"

2) added MPI stubs for building and running non-MPI jobs on the cell
simulator.  WARNING!!!  I have not adequately tested this.  The tests under
"sample/test" seem to work.  However, if you see unexptected results, this is
a good place to start.  There should be real MPI builds on some of the actual
cell blades.  I have not tried to use this feature yet.  The autoconf build
system expects to be told where MPI is located.  This can be done by
specifying the environment variables MPI_CPPFLAGS, MPI_LDFLAGS, and MPI_LIBS.
I have written a little script that will interogate mpicc and set these
accordingly.  It is in the top-level "config" directory and is called
"setmpi".  Also, you can tell the configure script on the command-line like:

% ./configure --enable-dmp --with-mpi=/opt/openmpi

This will look for headers in "/opt/openmpi/include" and libraries in
"/opt/openmpi/lib".  Notice that I also used the "--enable-dmp" flag.  This
tells configure not to use the mpi stubs.

3) added threads and spe_threads data structures to vpic.hpp.

4) added cell specific source to "src/cell".

All of the cell specific code in the normal library is included only if __PPU__
is defined.  Common cell code and SPE code are also included if __SPU__ is
defined.

Here is a list of the files with modifications:

src/vpic/vpic.hpp

Here is a list of new files:

src/cell/common/process/test_args.h
src/cell/spe/simple/test.c
src/cell/ppe/utils/spe_thread.h

Also, everthing under "top-level/cell" is new.  I have not yet added support
for turning on and off SIMD extensions.  I will work on this.  One way to
quickly turn on SIMD by default would be to add -DV4VERSION=... to the
Makefile.am file in "top-level/bin" and in "top-level/cell/ppe/bin".  Or you
can manually specify it when you run the configure script by doing:

% ./configure CPPFLAGS="-DV4VERSION=..."

Ideally, this would be handled by and --enable-simd type flag.  I will add
something like this when I have time.
