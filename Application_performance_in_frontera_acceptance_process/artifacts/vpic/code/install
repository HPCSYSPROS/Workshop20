#! /usr/bin/env bash
#
# Written by:
#   Kevin J. Bowers, Ph.D.
#   Plasma Physics Group (X-1)
#   Applied Physics Division
#   Los Alamos National Lab
# March/April 2004 - Original version

# global variable for use in functions
args=()
nargs=$#
cargs=$@
machine_file=$1
build_directory=$2

#-------------------------------------------------------------------------------
# check command-line and echo usage
#-------------------------------------------------------------------------------
function check_usage {
	if [[ $nargs < 1 ]]; then
		echo ""
		echo "Usage: $0 machine-file [build directory] [arg1 arg2 ...]"
		echo ""
		echo "You must specify a valid machine file."
		echo ""
		echo "autoconf only:"
		echo ""
		echo "   If a build directory is specified it will be created,"
		echo "   including its parents if they do not exist. The configuration"
		echo "   and build will take place in this directory."
		echo ""
		echo "   Additional command-line arguments are passed to the build-"
		echo "   system and may be used to specify environment variables."
		echo ""
		exit
	fi
} # check_usage

#-------------------------------------------------------------------------------
# strip leading command-line arguments to pass to build system
#-------------------------------------------------------------------------------
function parse_command_line {
	if [[ $nargs > 1 ]] ; then
		i=0
		for el in $cargs ; do
			args[$i]=$el
			let i=$i+1
		done

		i=1
		args=(${args[@]:0:$i} ${args[@]:$(($i + 1))})
		i=0
		args=(${args[@]:0:$i} ${args[@]:$(($i + 1))})
	fi
} # parse_command_line

#-------------------------------------------------------------------------------
# check for autoconf-style machine file
#-------------------------------------------------------------------------------
function check_autoconf {
	ac=`head -n 1 machine/$machine_file | grep autoconf | sed 's,#,,g'`
	if [ -n "$ac" ] ; then
		return 1
	else
		return 0
	fi
} # check_autoconf

#-------------------------------------------------------------------------------
# run autoconf style configuration and build
#-------------------------------------------------------------------------------
function configure_autoconf {
	cwd="./"

	config/bootstrap

	if [[ $nargs > 1 ]] ; then
		cwd=`pwd`

		if [ -d $build_directory ] ; then
			echo "Warning $build_directory already exists."
			echo "Do you want to remove it and continue? [Y/n]"
			read ans
			if [[ $ans == "" || $ans == "y" || $ans == "Y" ]] ; then
				rm -rf $build_directory
			else
				echo "Exiting"
				exit
			fi
		fi

		mkdir -p $build_directory
		cd $build_directory
	fi

	$cwd/configure --with-machine=$machine_file ${args[@]}
	echo "running make clean"
	make clean
	echo "running make"
	make -j4
} # configure_autoconf

#-------------------------------------------------------------------------------
# run imake style build
#-------------------------------------------------------------------------------
function configure_imake {
	rm Makefile
	imake -DMACHINE=machine/$machine_file
	gmake clean
	gmake -j4 all
} # configure_imake

################################################################################
# begin script execution
################################################################################

check_usage

parse_command_line

check_autoconf
ac=$? # this is the return value from check_autoconf

if [[ $ac == 1 ]] ; then
	configure_autoconf
else
	configure_imake
fi
